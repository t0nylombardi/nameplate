module NamePlate
  class Avatar
    class Generator
      # Errors
      class GenerationError < ::StandardError
      end

      class ImageMagickError < GenerationError
      end

      class FileSystemError < GenerationError
      end

      class ConfigurationError < GenerationError
      end

      # Readers
      attr_reader username: String
      attr_reader size: Integer
      attr_reader cache: bool
      attr_reader font: String
      attr_reader fill: String
      attr_reader logger: ::Logger

      # Constructors
      def initialize: (String username, Integer size, ?cache: bool, ?logger: ::Logger?) -> void

      # Class API
      def self.call: (String username, Integer size, ?cache: bool, ?logger: ::Logger?) -> String

      # Public API
      def execute!: () -> String

      private
      # Orchestration
      def generate: () -> String
      def build_identity: () -> NamePlate::Avatar::Identity
      def normalize_size: () -> Integer

      # Cache helpers
      def cached?: (String path) -> bool
      def use_cached: (String path) -> String

      # Image generation (MiniMagick/ImageMagick)
      def generate_avatar: (NamePlate::Avatar::Identity identity, Integer size, (String | ::Pathname) filename) -> void

      # Misc helpers
      def to_rgb: (Array[Integer] color) -> String
      def validate_inputs!: () -> void
      def default_logger: () -> ::Logger
    end
  end
end
